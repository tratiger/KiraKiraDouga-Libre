@use "sass:color";
@use "sass:map";
@use "sass:list";
@use "colors" as *;
@use "functions" as *;

// #region テーマカラー設定部分
/// カラー値を指定します。単一のライトテーマカラー（ダークテーマカラーは自動的に反転して取得）または、ライトテーマカラーとダークテーマカラーのリストを指定できます。
/// 現在のテーマに基づいて必要なカラー値を返します。
/// @access private
/// @param {Color | List} $color - カラー値。
/// @param {Bool} $is-light - 現在はライトテーマですか？
/// @return {Color} 必要なテーマカラーを返します。
@function themed-color($color, $is-light) {
	$light-color: null;
	$dark-color: null;

	@if type-of($value: $color) == list {
		$light-color: list.nth($color, 1);
		$dark-color: list.nth($color, 2);
	} @else {
		$light-color: $color;
		$dark-color: invert-lightness($color);
	}
	@return if($is-light, $light-color, $dark-color);
}

/// 16進数表現のカラーを生成します。（~~「またはRGB3色のリスト」~~は削除されました。）
/// @access private
/// @param {String} $name - カラー名（Sassマップのキー名）。
/// @param {Color} $color - ライトテーマのカラー、またはライトテーマカラーとダークテーマカラーのリスト。
/// @param {Bool} $is-light - 現在はライトテーマですか？
/// @output $property
@mixin hex-or-rgb-color($name, $color, $is-light) {
	$property: key-to-css-var($name);
	$result-color: themed-color($color, $is-light);
	#{$property}: $result-color;
}

/// 指定されたキー名に基づいて、波線の下線リンク背景を生成するかどうかを決定します。
/// @access private
/// @param {String | Bool} $key - 現在のカラーキー名。trueを渡すとチェックをバイパスできます。
/// @param {String} $color - 現在のカラー値。
/// @param {Bool} $is-light - 現在はライトテーマですか？
/// @output --accent-hover-wave-link-background
@mixin wave-link($key, $color, $is-light) {
	@if $key == true or map.get($state-colors, accent-hover) == $key {
		$svg-color: color-to-svg-color(themed-color($color, $is-light));
		--accent-hover-wave-link-background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 4'%3E%3Cpath fill='none' stroke='#{$svg-color}' d='M0 3.5c5 0 5-3 10-3s5 3 10 3 5-3 10-3 5 3 10 3'/%3E%3C/svg%3E");
	}
}
// #endregion

/// 指定された位置に角丸のサイズを設定します。
/// @access private
/// @param {Number} $radius - 角丸の半径。
/// @param {String} $position [full] - 角丸の位置。
/// @output border-radius
@mixin set-border-radius($radius, $position: full) {
	$positions: (
		top-left: $radius 0 0 0,
		left-top: $radius 0 0 0,
		top-right: 0 $radius 0 0,
		right-top: 0 $radius 0 0,
		bottom-right: 0 0 $radius 0,
		right-bottom: 0 0 $radius 0,
		bottom-left: 0 0 0 $radius,
		left-bottom: 0 0 0 $radius,
		top: $radius $radius 0 0,
		right: 0 $radius $radius 0,
		bottom: 0 0 $radius $radius,
		left: $radius 0 0 $radius,
		sharp-top-left: 0 $radius $radius $radius,
		sharp-left-top: 0 $radius $radius $radius,
		sharp-top-right: $radius 0 $radius $radius,
		sharp-right-top: $radius 0 $radius $radius,
		sharp-bottom-right: $radius $radius 0 $radius,
		sharp-right-bottom: $radius $radius 0 $radius,
		sharp-bottom-left: $radius $radius $radius 0,
		sharp-left-bottom: $radius $radius $radius 0,
		nwse: $radius 0, // この状況を何と呼べばいいかわからないので、とりあえずこれで代用します。
		nesw: 0 $radius 0, // この状況を何と呼べばいいかわからないので、とりあえずこれで代用します。
		full: $radius,
	);
	border-radius: map.get($positions, $position);
}
